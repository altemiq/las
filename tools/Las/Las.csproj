<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>$(DefaultTargetFramework)</TargetFramework>
    
    <!-- packaging -->
    <EnableSdkContainerSupport>true</EnableSdkContainerSupport>
    <ContainerDescription>Container for the `las` executable</ContainerDescription>

    <!-- turn off buggy analyzer -->
    <NoWarn>$(NoWarn);S1117</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition=" '$(SupportLas14)' != 'true' ">
    <!-- Remove COPC -->
    <Compile Remove="**\*Copc*\*.cs" />
    <Compile Remove="**\*Copc*.cs" />

    <!-- Remove Sorted -->
    <Compile Remove="**\*Sorted*\*.cs" />
    <Compile Remove="**\*Sorted*.cs" />

    <!-- Remove v1.4 specific resources -->
    <EmbeddedResource Remove="Properties\v1.4\*.resx" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\IO.Las.Cloud\IO.Las.Cloud.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.Compression\IO.Las.Compression.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.Geodesy\IO.Las.Geodesy.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.Http\IO.Las.Http.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.Indexing\IO.Las.Indexing.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.S3\IO.Las.S3.csproj" />
    <ProjectReference Include="..\..\src\IO.Las.Tiling\IO.Las.Tiling.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Altemiq.CommandLine.DependencyInjection" />
    <PackageReference Include="Altemiq.CommandLine.Spectre" />
    <PackageReference Include="Microsoft.Extensions.Http" />
    <PackageReference Include="Spectre.Console.Analyzer" />
  </ItemGroup>
  
  <ItemGroup>
    <Using Include="Spectre.Console" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="ExtensionMethods.*.cs;Options.*.cs;RootCommandExtensions.*.cs">
      <DependentUpon>$([System.Text.RegularExpressions.Regex]::Replace('%(Filename)%(Extension)', '\.[^.]+\%(Extension)$', '%(Extension)'))</DependentUpon>
    </Compile>
  </ItemGroup>

  <Target Name="_SetContainerLabels"
          BeforeTargets="ComputeContainerConfig"
          Condition=" '$(EnableSdkContainerSupport)' == 'true' ">

    <ItemGroup>
      <ContainerLabel Include="org.opencontainers.image.source" Value="$(PrivateRepositoryUrl)" Condition=" '$(PrivateRepositoryUrl)' != '' " />
    </ItemGroup>

  </Target>

</Project>
